{"version":3,"sources":["App/Button.tsx","App/Sounds.ts","App/Step.tsx","App/ChemicalData.tsx","App/BestResultsScreen.tsx","App/ErrosScreen.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["Button","props","className","onClick","handleClick","name","ClassificationButton","ctx","window","AudioContext","webkitAudioContext","promises","process","map","p","url","audioCtx","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","onload","arrayBuffer","response","decodeAudioData","decodedBuffer","onerror","send","sound","n","then","buffer","source","createBufferSource","connect","destination","start","buttons","Кислота","Соль","Основание","Оксид","Step","useState","state","setState","showHint","setShowHint","stepNumber","useEffect","timer","setTimeout","console","log","timerFinish","handleFinishEvent","formula","type","answer","undefined","mainAnimationDuration","clearTimeout","formulaPositionClass","button1","button2","button3","button4","scoreClass","checkNumberClass","useCallback","str","result","soundNumber","clickAnimationDuration","score","handleStopEvent","checksTotal","text","formulas","GRADE_CLASS_ARRAY","Object","keys","getBestResults","key","JSON","parse","localStorage","getItem","BestResultsScreen","grade","index","record","date","Date","toLocaleDateString","toLocaleTimeString","ErrosScreen","App","gradeClass","setStepData","resufledFormulas","setResufledFormulas","animationStep","setAnimationStep","element","document","documentElement","style","setProperty","toFixed","handleStartClick","newResufledFormulas","arr","arr1","item","Math","random","sort","a","b","pair","reshuffle","newScore","keyStep","count","parseInt","setItem","thisWasTheLastStep","length","records","push","now","slice","stringify","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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AM,kIACN2E,KAAM,GACNpB,KAAM,6CACND,QACE,iCACG,kCADH,MAKJ,CACEtD,KAAM,gHACN2E,KAAM,GACNpB,KAAM,6CACND,QACE,oCACM,oCAIV,CACEtD,KAAM,0GACN2E,KAAM,GACNpB,KAAM,6CACND,QACE,iCACG,kCADH,MACkB,oCAItB,CACEtD,KAAM,8FACN2E,KAAM,GACNpB,KAAM,6CACND,QACE,iCACG,kCADH,KACiB,oCAIrB,CACEtD,KAAM,oGACN2E,KAAM,GACNpB,KAAM,6CACND,QACE,iCACG,kCADH,KACiB,oCAIrB,CACEtD,KAAM,0GACN2E,KAAM,GACNpB,KAAM,6CACND,QACE,iCACG,kCADH,MACkB,oCAItB,CACEtD,KAAM,8IACN2E,KAAM,GACNpB,KAAM,6CACND,QACE,iCACG,kCADH,YAKJ,CACEtD,KAAM,qLACN2E,KAAM,GACNpB,KAAM,6CACND,QACE,iCACG,kCADH,KACiB,oCAOrB,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,yDACND,QAAS,sCAEX,CACEtD,KAAM,8FACN2E,KAAM,GACNpB,KAAM,yDACND,QAAS,sCAEX,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,yDACND,QAAS,qCAEX,CACEtD,KAAM,oGACN2E,KAAM,GACNpB,KAAM,yDACND,QAAS,sCAEX,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,yDACND,QAAS,sCAEX,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,yDACND,QAAS,sCAEX,CACEtD,KAAM,qFACN2E,KAAM,GACNpB,KAAM,yDACND,QAAS,sCAEX,CACEtD,KAAM,oGACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAIZ,CACEtD,KAAM,sFACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAIZ,CACEtD,KAAM,kGACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAIZ,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAIZ,CACEtD,KAAM,8GACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAIZ,CACEtD,KAAM,mGACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAIZ,CACEtD,KAAM,mGACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAMZ,CACEtD,KAAM,mGACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAIZ,CACEtD,KAAM,0GACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAIZ,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAIZ,CACEtD,KAAM,0GACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAIZ,CACEtD,KAAM,6FACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAIZ,CACEtD,KAAM,+GACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAIZ,CACEtD,KAAM,8FACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAIZ,CACEtD,KAAM,+GACN2E,KAAM,GACNpB,KAAM,yDACND,QACE,sCACQ,oCAOZ,CACEtD,KAAM,kFACN2E,KAAM,GACNpB,KAAM,2BACND,QACE,kCACI,kCADJ,KACkB,oCAItB,CACEtD,KAAM,qEACN2E,KAAM,GACNpB,KAAM,2BACND,QACE,oCACM,oCAIV,CACEtD,KAAM,kFACN2E,KAAM,GACNpB,KAAM,2BACND,QACE,sCACG,kCADH,KACiB,oCAIrB,CACEtD,KAAM,4EACN2E,KAAM,GACNpB,KAAM,2BACND,QACE,+CACO,oCAOX,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,kCACI,oCAIR,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,iCACG,kCADH,IACgB,oCAIpB,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,kCACI,oCAIR,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,iCACG,kCADH,IACgB,oCAIpB,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,kCACI,kCADJ,IACiB,oCAIrB,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,kCACI,oCAIR,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,mCACK,oCAIT,CACEtD,KAAM,wFACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,kCACI,kCADJ,IACiB,oCAIrB,CACEtD,KAAM,kFACN2E,KAAM,GACNpB,KAAM,iCACND,QAAS,qCAEX,CACEtD,KAAM,kFACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,kCACI,kCADJ,MAKJ,CACEtD,KAAM,kFACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,kCACI,kCADJ,MAKJ,CACEtD,KAAM,kFACN2E,KAAM,GACNpB,KAAM,iCACND,QAAS,qCAEX,CACEtD,KAAM,kFACN2E,KAAM,GACNpB,KAAM,iCACND,QAAS,qCAEX,CACEtD,KAAM,kFACN2E,KAAM,GACNpB,KAAM,iCACND,QAAS,qCAEX,CACEtD,KAAM,kFACN2E,KAAM,GACNpB,KAAM,iCACND,QAAS,qCAEX,CACEtD,KAAM,kFACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,kCACI,kCADJ,MAKJ,CACEtD,KAAM,8FACN2E,KAAM,GACNpB,KAAM,iCACND,QAAS,qCAEX,CACEtD,KAAM,8FACN2E,KAAM,GACNpB,KAAM,iCACND,QAAS,qCAEX,CACEtD,KAAM,8FACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,kCACI,kCADJ,IACiB,oCAIrB,CACEtD,KAAM,8FACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,kCACI,kCADJ,IACiB,oCAIrB,CACEtD,KAAM,8FACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,mCACK,oCAIT,CACEtD,KAAM,8FACN2E,KAAM,GACNpB,KAAM,iCACND,QACE,mCACK,oCAOT,CACEtD,KAAM,oGACN2E,KAAM,wFACNpB,KAAM,yDACND,QACE,kCACI,kCADJ,OAKJ,CACEtD,KAAM,6EAC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","file":"static/js/main.50923809.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { ButtonClickedType } from \"./ChemicalData\";\n\nexport const Button = (props: {\n  name: string;\n  className: string;\n  handleClick: () => void;\n}): JSX.Element => (\n  <div className={props.className + \" scale1-1\"}>\n    <button className=\"buttonView\" onClick={props.handleClick}>\n      {props.name}\n    </button>\n  </div>\n);\n\nexport const ClassificationButton = (props: {\n  name: ButtonClickedType;\n  className: string;\n  handleClick: (str: ButtonClickedType) => void;\n}): JSX.Element => (\n  <Button\n    name={props.name}\n    className={props.className}\n    handleClick={() => props.handleClick(props.name)}\n  />\n);\n","const AudioContext =\n  (window as any).AudioContext || (window as any).webkitAudioContext;\nconst ctx = new AudioContext();\nconst audioPaths = [\n  process.env.PUBLIC_URL + \"/sounds/162485__kastenfrosch__space.mp3\", // start\n  process.env.PUBLIC_URL + \"/sounds/135510__chriddof__space-bloop.wav\", // true shot\n  process.env.PUBLIC_URL + \"/sounds/432761__xpoki__lazershot.wav\" // false shot\n];\n\n// https://stackoverflow.com/questions/47204048/play-multiple-audio-files-on-safari-at-once\n// utility function to load an audio file and resolve it as a decoded audio buffer\nfunction getBuffer(url: string, audioCtx: AudioContext) {\n  return new Promise((resolve, reject) => {\n    if (!url) {\n      reject(\"Missing url!\");\n      return;\n    }\n\n    if (!audioCtx) {\n      reject(\"Missing audio context!\");\n      return;\n    }\n\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url);\n    xhr.responseType = \"arraybuffer\";\n\n    xhr.onload = function() {\n      let arrayBuffer = xhr.response;\n      audioCtx.decodeAudioData(arrayBuffer, decodedBuffer => {\n        resolve(decodedBuffer);\n      });\n    };\n\n    xhr.onerror = function() {\n      reject(\"An error occurred.\");\n    };\n\n    xhr.send();\n  });\n}\n\nconst promises = audioPaths.map((p: string) => getBuffer(p, ctx));\n\nexport const sound = (n: number) =>\n  promises[n].then((buffer: any): void => {\n    const source = ctx.createBufferSource();\n    source.buffer = buffer as any;\n    source.connect(ctx.destination);\n    source.start();\n  });\n","import React, { useState, useCallback, useEffect } from \"react\";\n\nimport { ClassificationButton } from \"./Button\";\nimport { sound } from \"./Sounds\";\nimport { ButtonClickedType, ChemicalType } from \"./ChemicalData\";\n\ntype StateType = \"zero\" | \"zero+\" | \"zero+false\" | ButtonClickedType;\n\nconst buttons = {\n  Кислота: \"buttonPosition1\",\n  Соль: \"buttonPosition2\",\n  Основание: \"buttonPosition3\",\n  Оксид: \"buttonPosition4\"\n};\n\nconst Step = (props: {\n  stepNumber: number;\n  checksTotal: number;\n  clickAnimationDuration: number;\n  formula: ChemicalType;\n  handleFinishEvent: ({\n    name,\n    type,\n    answer\n  }: {\n    name: string;\n    type: string;\n    answer: string | undefined;\n  }) => void;\n  handleStopEvent: () => void;\n  mainAnimationDuration: number;\n  score: number;\n}): JSX.Element => {\n  const [state, setState] = useState<StateType>(\"zero\");\n  const [showHint, setShowHint] = useState(false);\n\n  const { stepNumber } = props;\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setState(\"zero+\");\n      console.log('setState(\"zero+\"); ');\n    }, 50);\n    const timerFinish = setTimeout(() => {\n      props.handleFinishEvent({\n        name: props.formula.name,\n        type: props.formula.type,\n        answer: undefined\n      });\n      console.log(\"useEffect finish timeout \");\n    }, props.mainAnimationDuration);\n    return () => {\n      clearTimeout(timer);\n      clearTimeout(timerFinish);\n      console.log(\"useEffect clearTimeouts \");\n    };\n  }, [props]);\n\n  const handleClick = useCallback(\n    (str: ButtonClickedType) => {\n      if (state === \"zero+\") {\n        setState(str);\n        const result = props.formula.type === str;\n        const soundNumber = result ? 1 : 2;\n        const answer = {\n          name: props.formula.name,\n          type: props.formula.type,\n          answer: str\n        };\n        sound(soundNumber);\n        if (!result) {\n          setTimeout(\n            () => setState(\"zero+false\"),\n            props.clickAnimationDuration + 100\n          );\n        }\n        setTimeout(() => {\n          props.handleFinishEvent(answer);\n        }, (props.clickAnimationDuration + 100) * (result ? 1 : 2));\n      }\n    },\n    [props, state]\n  );\n\n  let formulaPositionClass: string;\n  let button1: string;\n  let button2: string;\n  let button3: string;\n  let button4: string;\n  let scoreClass: string;\n  let checkNumberClass: string;\n\n  switch (state) {\n    case \"zero\":\n      formulaPositionClass = \"startPosition\";\n      if (stepNumber === 1) {\n        button1 = \"endPosition\";\n        button2 = \"endPosition\";\n        button3 = \"endPosition\";\n        button4 = \"endPosition\";\n        scoreClass = \"startPosition\";\n        checkNumberClass = \"startPosition\";\n      } else {\n        button1 = \"buttonPosition1 transition-true\";\n        button2 = \"buttonPosition2 transition-true\";\n        button3 = \"buttonPosition3 transition-true\";\n        button4 = \"buttonPosition4 transition-true\";\n        scoreClass = \"score transition-true\";\n        checkNumberClass = \"check-number transition-true\";\n      }\n      break;\n    case \"zero+\":\n    case \"zero+false\":\n      formulaPositionClass = \"endPosition endPositionTransition\";\n      button1 = \"buttonPosition1 transition-true\";\n      button2 = \"buttonPosition2 transition-true\";\n      button3 = \"buttonPosition3 transition-true\";\n      button4 = \"buttonPosition4 transition-true\";\n      scoreClass = \"score transition-true\";\n      checkNumberClass = \"check-number transition-true\";\n      break;\n    default:\n      formulaPositionClass = `${buttons[state]} ${\n        props.formula.type === state ? \" transition-true\" : \" transition-false\"\n      }`;\n      button1 = \"buttonPosition1\";\n      button2 = \"buttonPosition2\";\n      button3 = \"buttonPosition3\";\n      button4 = \"buttonPosition4\";\n      scoreClass = \"score transition-true\";\n      checkNumberClass = \"check-number transition-true\";\n      console.log(\"state =  \", state);\n      console.log(\"formulaPositionClass =  \", formulaPositionClass);\n      break;\n  }\n\n  return (\n    <div className=\"main main2-background-size\">\n      <div className={scoreClass}>{props.score}</div>\n\n      <div className={checkNumberClass} onClick={props.handleStopEvent}>\n        {`${props.stepNumber} / ${props.checksTotal}`}\n      </div>\n\n      <ClassificationButton\n        name=\"Кислота\"\n        className={button1}\n        handleClick={handleClick}\n      />\n      <ClassificationButton\n        name=\"Соль\"\n        className={button2}\n        handleClick={handleClick}\n      />\n      <ClassificationButton\n        name=\"Основание\"\n        className={button3}\n        handleClick={handleClick}\n      />\n      <ClassificationButton\n        name=\"Оксид\"\n        className={button4}\n        handleClick={handleClick}\n      />\n\n      <div className={formulaPositionClass}>\n        <button className=\"formulaView\" onClick={() => setShowHint(true)}>\n          <div>{props.formula.formula}</div>\n          {showHint && <div className=\"formula-hint\">{props.formula.text}</div>}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Step;\n","import React from \"react\";\n\nexport type ButtonClickedType = \"Кислота\" | \"Соль\" | \"Основание\" | \"Оксид\";\n\nexport type ChemicalType = {\n  name: string;\n  type: ButtonClickedType;\n  formula: JSX.Element;\n  text: string;\n};\n\nexport function reshuffle<T>(arr: T[]): T[] {\n  const arr1 = arr.map((item: T): [number, T] => [Math.random(), item]);\n  arr1.sort((a, b) => a[0] - b[0]);\n  return arr1.map(pair => pair[1]);\n}\n\nexport const formulas: { [key: string]: ChemicalType[] } = {\n  \"8_класс\": [\n    {\n      name: \"азотная кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          HNO<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"азотистая кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          НNO<sub>2</sub>\n        </div>\n      )\n    },\n    {\n      name: \"фтороводородная (плавиковая ) кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: <div>HF</div>\n    },\n    {\n      name: \"борная кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          Н<sub>3</sub>ВО<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"хлороводородная кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: <div>HCl</div>\n    },\n    {\n      name: \"уксусная кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          СН<sub>3</sub>СООН\n        </div>\n      )\n    },\n    {\n      name: \"бромоводородная кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: <div>HBr</div>\n    },\n    {\n      name: \"муравьиная кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: <div>НСООН</div>\n    },\n    {\n      name: \"иодоводородная кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: <div>HI</div>\n    },\n    {\n      name: \"синильная кислота кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: <div>НСN</div>\n    },\n    {\n      name: \"серная кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          H<sub>2</sub>SO<sub>4</sub>\n        </div>\n      )\n    },\n    {\n      name: \"дихромовая кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          Н<sub>2</sub>Сr<sub>2</sub>O<sub>7</sub>\n        </div>\n      )\n    },\n    {\n      name: \"сернистая кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          H<sub>2</sub>SO<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"хлорноватистая кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: <div>НСlO</div>\n    },\n    {\n      name: \"сероводородная кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          H<sub>2</sub>S\n        </div>\n      )\n    },\n    {\n      name: \"хлорноватая кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          HClO<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"мышьяковая кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          H<sub>3</sub>AsO<sub>4</sub>\n        </div>\n      )\n    },\n    {\n      name: \"угольная кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          H<sub>2</sub>CO<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"селеновая кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          H<sub>2</sub>SO<sub>4</sub>\n        </div>\n      )\n    },\n    {\n      name: \"кремниевая кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          H<sub>2</sub>SiO<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"селеноводородная кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          H<sub>2</sub>Sе\n        </div>\n      )\n    },\n    {\n      name: \"фосфорная (ортофосфорная) кислота\",\n      text: \"\",\n      type: \"Кислота\",\n      formula: (\n        <div>\n          H<sub>3</sub>PO<sub>4</sub>\n        </div>\n      )\n    },\n\n    /*\n     **********************************************************************/\n    {\n      name: \"Гидроксид лития\",\n      text: \"\",\n      type: \"Основание\",\n      formula: <div>LiOH</div>\n    },\n    {\n      name: \"Гидроксид натрия\",\n      text: \"\",\n      type: \"Основание\",\n      formula: <div>NaOH</div>\n    },\n    {\n      name: \"Гидроксид калия\",\n      text: \"\",\n      type: \"Основание\",\n      formula: <div>KOH</div>\n    },\n    {\n      name: \"Гидроксид рубидия\",\n      text: \"\",\n      type: \"Основание\",\n      formula: <div>RbOH</div>\n    },\n    {\n      name: \"Гидроксид лития\",\n      text: \"\",\n      type: \"Основание\",\n      formula: <div>LiOH</div>\n    },\n    {\n      name: \"Гидроксид цезия\",\n      text: \"\",\n      type: \"Основание\",\n      formula: <div>CsOH</div>\n    },\n    {\n      name: \"Гидроксид меди(I)\",\n      text: \"\",\n      type: \"Основание\",\n      formula: <div>CuOH</div>\n    },\n    {\n      name: \"Гидроксид кальция\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Ca(OH)<sub>2</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Гидроксид меди(II)\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Cu(OH)<sub>2</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Гидроксид железа(II)\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Fe(OH)<sub>2</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Гидроксид бария\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Ba(OH)<sub>2</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Гидроксид кобальта(II)\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Co(OH)<sub>2</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Гидроксид никеля (II)\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Ni(OH)<sub>2</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Гидроксид свинца (II)\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Pb(OH)<sub>2</sub>\n        </div>\n      )\n    },\n    /*\n     **********************************************************************/\n    {\n      name: \"гидроксид железа(III)\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Fe(OH)<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"гидроксид алюминия\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Al(OH)<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"гидроксид цинка\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Zn(OH)<sub>2</sub>\n        </div>\n      )\n    },\n    {\n      name: \"гидроксид бериллия\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Be(OH)<sub>2</sub>\n        </div>\n      )\n    },\n    {\n      name: \"гидроксид хрома(III)\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Cr(OH)<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"гидроксид марганца (IV)\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Mn(OH)<sub>4</sub>\n        </div>\n      )\n    },\n    {\n      name: \"гидроксид cвинца (IV)\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Pb(OH)<sub>4</sub>\n        </div>\n      )\n    },\n    {\n      name: \"гидроксид марганца (II)\",\n      text: \"\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          Mn(OH)<sub>2</sub>\n        </div>\n      )\n    },\n\n    /*\n     **********************************************************************/\n    {\n      name: \"сульфат натрия\",\n      text: \"\",\n      type: \"Соль\",\n      formula: (\n        <div>\n          Na<sub>2</sub>SO<sub>4</sub>\n        </div>\n      )\n    },\n    {\n      name: \"хлорид меди (II)\",\n      text: \"\",\n      type: \"Соль\",\n      formula: (\n        <div>\n          CuCl<sub>2</sub>\n        </div>\n      )\n    },\n    {\n      name: \"карбонат калия\",\n      text: \"\",\n      type: \"Соль\",\n      formula: (\n        <div>\n          К<sub>2</sub>CO<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"силикат бария\",\n      text: \"\",\n      type: \"Соль\",\n      formula: (\n        <div>\n          ВаSiO<sub>3</sub>\n        </div>\n      )\n    },\n\n    /*\n     **********************************************************************/\n    {\n      name: \"Кислотный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          SO<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Кислотный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          P<sub>2</sub>O<sub>5</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Кислотный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          CO<sub>2</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Кислотный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          N<sub>2</sub>O<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Кислотный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          Cl<sub>2</sub>O<sub>7</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Кислотный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          WO<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Кислотный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          SiO<sub>2</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Кислотный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          Mn<sub>2</sub>O<sub>7</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Основной оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: <div>CuO</div>\n    },\n    {\n      name: \"Основной оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          Na<sub>2</sub>O\n        </div>\n      )\n    },\n    {\n      name: \"Основной оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          Li<sub>2</sub>O\n        </div>\n      )\n    },\n    {\n      name: \"Основной оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: <div>BaO</div>\n    },\n    {\n      name: \"Основной оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: <div>CoO</div>\n    },\n    {\n      name: \"Основной оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: <div>FeO</div>\n    },\n    {\n      name: \"Основной оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: <div>SrO</div>\n    },\n    {\n      name: \"Основной оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          Cu<sub>2</sub>O\n        </div>\n      )\n    },\n    {\n      name: \"амфотерный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: <div>ZnO</div>\n    },\n    {\n      name: \"амфотерный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: <div>BeO</div>\n    },\n    {\n      name: \"амфотерный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          Al<sub>2</sub>O<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"амфотерный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          Fe<sub>2</sub>O<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"амфотерный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          PbO<sub>2</sub>\n        </div>\n      )\n    },\n    {\n      name: \"амфотерный оксид\",\n      text: \"\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          MnO<sub>2</sub>\n        </div>\n      )\n    },\n    /*\n     **********************************************************************/\n\n    {\n      name: \"Гидроксид аммония\",\n      text: \"Сульфид аммония\",\n      type: \"Основание\",\n      formula: (\n        <div>\n          NH<sub>4</sub>OH\n        </div>\n      )\n    },\n    {\n      name: \"Cульфит натрия\",\n      text: \"Cульфит натрия\",\n      type: \"Соль\",\n      formula: (\n        <div>\n          Na<sub>2</sub>SO<sub>3</sub>\n        </div>\n      )\n    },\n    {\n      name: \"Вода (оксид водорода)\",\n      text: \"Вода\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          H<sub>2</sub>O\n        </div>\n      )\n    }\n  ],\n  \"9_класс\": [\n    {\n      name: \"Cульфит натрия\",\n      text: \"Cульфит натрия\",\n      type: \"Соль\",\n      formula: (\n        <div>\n          Na<sub>2</sub>SO<sub>3</sub>\n        </div>\n      )\n    }\n  ],\n  \"10_класс\": [\n    {\n      name: \"Вода (оксид водорода)\",\n      text: \"Вода\",\n      type: \"Оксид\",\n      formula: (\n        <div>\n          H<sub>2</sub>O\n        </div>\n      )\n    }\n  ]\n};\n\nexport const GRADE_CLASS_ARRAY = Object.keys(formulas);\n","import React from \"react\";\n\nimport { GRADE_CLASS_ARRAY } from \"./ChemicalData\";\n\nexport type scoreType = {\n  date: number;\n  score: number;\n};\nexport const getBestResults = (key: string): scoreType[] =>\n  JSON.parse(localStorage.getItem(key) || \"[]\");\n\nexport const BestResultsScreen = (): JSX.Element => {\n  return (\n    <div className=\"main main1-background-size\">\n      {GRADE_CLASS_ARRAY.map((grade, index) => (\n        <div key={grade}>\n          <div>BestResultsScreen {grade}</div>\n          {getBestResults(GRADE_CLASS_ARRAY[index]).map((record: scoreType) => (\n            <div className=\"display-flex\" key={record.date}>\n              <div className=\"record-score\">{record.score}</div>\n              <div className=\"record-date\">\n                {new Date(record.date).toLocaleDateString()}{\" \"}\n                {new Date(record.date).toLocaleTimeString()}\n              </div>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nconst ErrosScreen: React.FC = () => {\n  return (\n    <div key=\"Старт\" className=\"main main1-background-size\">\n      <div>ErrosScreen</div>\n    </div>\n  );\n};\n\nexport default ErrosScreen;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { Button } from \"./Button\";\nimport Step from \"./Step\";\n\nimport { formulas, reshuffle } from \"./ChemicalData\";\n\nimport { sound } from \"./Sounds\";\nimport { BestResultsScreen, getBestResults } from \"./BestResultsScreen\";\n\nimport { GRADE_CLASS_ARRAY } from \"./ChemicalData\";\n\nimport ErrosScreen from \"./ErrosScreen\";\n\n// import { convert } from \"./util\";\n// convert();\n\nconst MAIN_ANIMATION_DURATION = 10000;\nconst CLICK_ANIMATION_DURATION = 1000;\n\nconst CHECKS_TOTAL = 10;\nconst RECORDS_TOTAL = 5;\n\nconst START_SCREEN_STATE = 0;\nconst FINISH_SCREEN_STATE = -1;\nconst BEST_RESULTS_SCREEN_STATE = -2;\nconst ERRORS_SCREEN_STATE = -3;\n\nconst App: React.FC = () => {\n  const [{ stepNumber, score, gradeClass }, setStepData] = useState<{\n    stepNumber: number;\n    score: number;\n    gradeClass: string;\n  }>({\n    stepNumber: START_SCREEN_STATE,\n    score: 0,\n    gradeClass: GRADE_CLASS_ARRAY[0]\n  });\n  const [resufledFormulas, setResufledFormulas] = useState(\n    formulas[gradeClass]\n  );\n\n  const [animationStep, setAnimationStep] = useState(false);\n\n  useEffect(() => {\n    const element = document.documentElement;\n    element.style.setProperty(\n      \"--main-animation-duration\",\n      (MAIN_ANIMATION_DURATION / 1000).toFixed(2) + \"s\"\n    );\n    element.style.setProperty(\n      \"--click-animation-duration\",\n      (CLICK_ANIMATION_DURATION / 1000).toFixed(2) + \"s\"\n    );\n    const timer = setTimeout(() => setAnimationStep(true), 50);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  const handleStartClick = useCallback((grade: string) => {\n    console.log(\"Нажата кнопка старт\");\n    const newResufledFormulas = reshuffle(formulas[grade]);\n    setResufledFormulas(newResufledFormulas);\n    console.log(\"newResufledFormulas = \", newResufledFormulas);\n    setStepData({ stepNumber: 1, score: 0, gradeClass: grade });\n    sound(0);\n  }, []);\n\n  const handleFinishEvent = useCallback(\n    ({\n      name,\n      type,\n      answer\n    }: {\n      name: string;\n      type: string;\n      answer: string | undefined;\n    }) => {\n      console.log(\"handleFinishEvent name = \", name);\n      console.log(\"handleFinishEvent type = \", type);\n      console.log(\"handleFinishEvent answer = \", answer);\n      const keyStep = `${name}/${answer}`;\n      const count = parseInt(localStorage.getItem(keyStep) || \"0\", 10);\n\n      let newScore;\n      if (answer === undefined) {\n        newScore = score;\n        localStorage.setItem(keyStep, `${count + 1}`);\n      } else {\n        if (type === answer) {\n          newScore = score + 2;\n        } else {\n          newScore = score - 1;\n          localStorage.setItem(keyStep, `${count + 1}`);\n        }\n      }\n\n      const thisWasTheLastStep =\n        stepNumber >= CHECKS_TOTAL || stepNumber >= resufledFormulas.length;\n\n      setStepData({\n        stepNumber: thisWasTheLastStep ? FINISH_SCREEN_STATE : stepNumber + 1,\n        score: newScore,\n        gradeClass\n      });\n      if (thisWasTheLastStep) {\n        let records = getBestResults(gradeClass);\n        records.push({\n          date: Date.now(),\n          score: newScore\n        });\n        records.sort((a, b) => b.score - a.score);\n        records = records.slice(0, RECORDS_TOTAL);\n        localStorage.setItem(gradeClass, JSON.stringify(records));\n      }\n    },\n    [stepNumber, resufledFormulas.length, gradeClass, score]\n  );\n\n  switch (stepNumber) {\n    case START_SCREEN_STATE:\n      return (\n        <div className=\"main main1-background-size\">\n          {GRADE_CLASS_ARRAY.map((grade, index) => (\n            <Button\n              key={grade}\n              name={`Начать игру (${grade})`}\n              className={\n                animationStep\n                  ? `buttonPositionPlay${index + 1} transition-true`\n                  : \"startPosition\"\n              }\n              handleClick={() => handleStartClick(grade)}\n            />\n          ))}\n\n          <Button\n            name=\"Лучшие результаты\"\n            className={\n              animationStep\n                ? \"buttonPositionShowRecords transition-true\"\n                : \"startPosition\"\n            }\n            handleClick={() =>\n              setStepData({\n                stepNumber: BEST_RESULTS_SCREEN_STATE,\n                score: 0,\n                gradeClass\n              })\n            }\n          />\n          <Button\n            name=\"Неправильные ответы\"\n            className={\n              animationStep\n                ? \"buttonPositionShowWrongShots transition-true\"\n                : \"startPosition\"\n            }\n            handleClick={() =>\n              setStepData({\n                stepNumber: ERRORS_SCREEN_STATE,\n                score: 0,\n                gradeClass\n              })\n            }\n          />\n        </div>\n      );\n\n    case FINISH_SCREEN_STATE:\n      return (\n        <div className=\"main main1-background-size\">\n          <div\n            className={\n              animationStep\n                ? \"buttonPositionPlay result transition-true\"\n                : \"startPosition result\"\n            }\n          >{`Итого: ${score}`}</div>\n\n          <Button\n            name={`Возврат на главный экран`}\n            className={\n              animationStep\n                ? \"buttonPositionShowRecords  transition-true\"\n                : \"startPosition\"\n            }\n            handleClick={() =>\n              setStepData({\n                stepNumber: START_SCREEN_STATE,\n                score: 0,\n                gradeClass\n              })\n            }\n          />\n        </div>\n      );\n\n    case BEST_RESULTS_SCREEN_STATE: {\n      return (\n        <div\n          onClick={() =>\n            setStepData({\n              stepNumber: START_SCREEN_STATE,\n              score: 0,\n              gradeClass\n            })\n          }\n        >\n          <BestResultsScreen />\n        </div>\n      );\n    }\n\n    case ERRORS_SCREEN_STATE:\n      return (\n        <div\n          onClick={() =>\n            setStepData({\n              stepNumber: START_SCREEN_STATE,\n              score: 0,\n              gradeClass\n            })\n          }\n        >\n          <ErrosScreen />\n        </div>\n      );\n\n    default:\n      return (\n        <Step\n          key={stepNumber}\n          stepNumber={stepNumber}\n          checksTotal={CHECKS_TOTAL}\n          clickAnimationDuration={CLICK_ANIMATION_DURATION}\n          formula={resufledFormulas[stepNumber - 1]}\n          handleFinishEvent={handleFinishEvent}\n          handleStopEvent={() =>\n            setStepData({\n              stepNumber: START_SCREEN_STATE,\n              score: 0,\n              gradeClass\n            })\n          }\n          mainAnimationDuration={MAIN_ANIMATION_DURATION}\n          score={score}\n        />\n      );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App/App.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}